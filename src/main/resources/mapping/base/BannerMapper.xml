<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.text.demo.mapper.base.BannerMapper">
  <resultMap id="BaseResultMap" type="com.text.demo.entity.Banner">
    <id column="banner_id" jdbcType="INTEGER" property="bannerId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="page_name" jdbcType="CHAR" property="pageName" />
    <result column="location" jdbcType="CHAR" property="location" />
    <result column="destination" jdbcType="VARCHAR" property="destination" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="online_date" jdbcType="DATE" property="onlineDate" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    banner_id, title, page_name, `location`, destination, cover, `status`, online_date, 
    create_user_id, create_time, update_user_id, update_time, sort
  </sql>
  <select id="selectByExample" parameterType="com.text.demo.entity.BannerCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from banner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from banner
    where banner_id = #{bannerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from banner
    where banner_id = #{bannerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.text.demo.entity.Banner">
    insert into banner (banner_id, title, page_name, 
      `location`, destination, cover, 
      `status`, online_date, create_user_id, 
      create_time, update_user_id, update_time, 
      sort)
    values (#{bannerId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{pageName,jdbcType=CHAR}, 
      #{location,jdbcType=CHAR}, #{destination,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{onlineDate,jdbcType=DATE}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.text.demo.entity.Banner">
    insert into banner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bannerId != null">
        banner_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="pageName != null">
        page_name,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="destination != null">
        destination,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="onlineDate != null">
        online_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bannerId != null">
        #{bannerId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pageName != null">
        #{pageName,jdbcType=CHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=CHAR},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="onlineDate != null">
        #{onlineDate,jdbcType=DATE},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.text.demo.entity.Banner">
    update banner
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pageName != null">
        page_name = #{pageName,jdbcType=CHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=CHAR},
      </if>
      <if test="destination != null">
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="onlineDate != null">
        online_date = #{onlineDate,jdbcType=DATE},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where banner_id = #{bannerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.text.demo.entity.Banner">
    update banner
    set title = #{title,jdbcType=VARCHAR},
      page_name = #{pageName,jdbcType=CHAR},
      `location` = #{location,jdbcType=CHAR},
      destination = #{destination,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      online_date = #{onlineDate,jdbcType=DATE},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sort = #{sort,jdbcType=INTEGER}
    where banner_id = #{bannerId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.text.demo.entity.BannerCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from banner
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>